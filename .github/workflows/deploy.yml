name: CI/CD Pipeline

on:
  push:
    branches:
      - master

env:
  TF_DIR: terraform
  ANSIBLE_DIR: ansible
  PYTHON_DIR: app

jobs:
  # test:
  #   name: Test Flask App
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10'

  #     - name: Install dependencies
  #       run: |
  #         cd ${{ env.PYTHON_DIR }}
  #         pip install -r requirements.txt

  #     - name: Run tests
  #       run: |
  #         cd ${{ env.PYTHON_DIR }}
  #         pytest

  terraform:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    # needs: test

    env:
      TF_VAR_client_id: ${{ secrets.TF_VAR_client_id }}
      TF_VAR_client_secret: ${{ secrets.TF_VAR_client_secret }}
      TF_VAR_subscription_id: ${{ secrets.TF_VAR_subscription_id }}
      TF_VAR_tenant_id: ${{ secrets.TF_VAR_tenant_id }}
      TF_VAR_ssh_public_key: ${{ secrets.TF_VAR_ssh_public_key }}

    outputs:
      bastion_ip: ${{ steps.output.outputs.bastion_ip }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init & Apply
        run: |
          cd $TF_DIR
          terraform init
          terraform apply -auto-approve

      - name: Output Bastion IP
        id: output
        run: |
          echo "bastion_ip=$(cd $TF_DIR && terraform output -raw bastion_ip)" >> $GITHUB_OUTPUT
          echo "app_vm_ips=$(cd $TF_DIR && terraform output -json app_vm_ips)" >> $GITHUB_ENV

  ansible:
    name: Configure VMs with Ansible via Bastion
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install SSH key for Bastion
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: SSH to Bastion and run Ansible
        env:
          APP_VM_IPS: ${{ env.app_vm_ips }}
        run: |
          echo '${{ env.APP_VM_IPS }}'
          
          ssh -o StrictHostKeyChecking=no azureuser@${{ needs.terraform.outputs.bastion_ip }} << EOF
            sudo apt update && sudo apt install -y ansible git jq

            rm -rf repo && git clone https://github.com/Buschhen/CC2.git repo
            cd repo/${{ env.ANSIBLE_DIR }}

            echo "[webservers]" > inventory.ini

            cat inventory.ini

            for ip in $(echo '${{ env.APP_VM_IPS }}' | jq -r '.[]'); do
              echo "\$ip ansible_user=azureuser" >> inventory.ini
            done

            ansible-playbook -i inventory.ini deployment.yml
          EOF
