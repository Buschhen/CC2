---
- name: Deploy Flask App to Azure VMs
  hosts: webservers
  become: yes

  vars:
    project_dir: /repo
    repo_url: https://github.com/Buschhen/CC2.git
    venv_dir: /repo/venv

  tasks:
    - name: 🔍 DEBUG - Show current hostname
      command: hostname
      register: hostname_output

    - name: 🔍 DEBUG - Print hostname
      debug:
        msg: "Running on host: {{ hostname_output.stdout }}"

    - name: Install required apt packages
      apt:
        name: [git, python3-pip, python3-venv]
        state: present
        update_cache: yes



    - name: Clone project repo
      git:
        repo: "{{ repo_url }}"
        dest: "{{ project_dir }}"
        version: master
        force: yes

    - name: Create Python virtual environment
      command: python3 -m venv "{{ venv_dir }}"
      args:
        creates: "{{ venv_dir }}"

    - name: Install Python requirements
      pip:
        requirements: "{{ project_dir }}/requirements.txt"
        virtualenv: "{{ venv_dir }}"
    
    - name: Copy systemd service file for Flask
      template:
        src: flask.service.j2
        dest: /etc/systemd/system/flask.service
        mode: '0644'

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Enable and start Flask app service
      systemd:
        name: flask
        state: restarted
        enabled: yes

    - name: 🔍 Show Flask service status
      shell: systemctl status flask --no-pager
      register: flask_status
      changed_when: false

    - name: 🔍 Print Flask service status
      debug:
        var: flask_status.stdout_lines

    # - name: Start Flask app (simple background)
    #   shell: |
    #     nohup {{ venv_dir }}/bin/python {{ project_dir }}/app/main.py > /var/log/flask.log 2>&1 &
    #   args:
    #     executable: /bin/bash

    - name: 🔍 DEBUG - Show running Python processes
      shell: pgrep -fl python
      register: python_procs

    - name: 🔍 DEBUG - Print Python processes
      debug:
        var: python_procs.stdout_lines

    - name: 🔍 DEBUG - Check if app is running on port 80
      shell: ss -tulpn | grep :80 || true
      register: port_check

    - name: 🔍 DEBUG - Show port 80 processes
      debug:
        var: port_check.stdout_lines

    - name: 🔍 DEBUG - Tail Flask logs
      shell: tail -n 20 /var/log/flask.log || echo "log not found"
      register: flask_log

    - name: 🔍 DEBUG - Show Flask logs
      debug:
        var: flask_log.stdout_lines

    - name: 🔍 DEBUG - Check if Flask is installed
      shell: |
        source "{{ venv_dir }}/bin/activate"
        python -c "import flask; print('Flask is installed')"
      args:
        executable: /bin/bash

    - name: 🔍 Show Flask service logs (from journalctl)
      shell: journalctl -u flask --no-pager -n 30 || cat /var/log/flask.log || echo "No logs found"
      register: flask_logs
      changed_when: false

    - name: 🧾 Print Flask logs
      debug:
        var: flask_logs.stdout_lines
